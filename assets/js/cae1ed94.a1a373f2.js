"use strict";(self.webpackChunktransformer_blog=self.webpackChunktransformer_blog||[]).push([[1779],{1061:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>b,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var d=t(7462),i=(t(7294),t(3905));t(1839);const s={title:"\u6a21\u578b\u7684\u8f93\u5165",sidebar_label:"Input",sidebar_position:1},o="Embedding \u6e90\u7801\u89e3\u6790",r={unversionedId:"code-study/input",id:"code-study/input",title:"\u6a21\u578b\u7684\u8f93\u5165",description:"\u6b64\u5904\u4ee5bert\u6a21\u578b\u4e3a\u4f8b\u8bb2\u89e3embedding\u6a21\u5757\u4ee3\u7801\u3002",source:"@site/docs/code-study/input.md",sourceDirName:"code-study",slug:"/code-study/input",permalink:"/transformer/docs/code-study/input",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/code-study/input.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\u6a21\u578b\u7684\u8f93\u5165",sidebar_label:"Input",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Attention",permalink:"/transformer/docs/code-study/attention"},next:{title:"cross-attention",permalink:"/transformer/docs/code-study/cross-attention"}},a={},p=[],m={toc:p};function b(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,d.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"embedding-\u6e90\u7801\u89e3\u6790"},"Embedding \u6e90\u7801\u89e3\u6790"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u6b64\u5904\u4ee5bert\u6a21\u578b\u4e3a\u4f8b\u8bb2\u89e3embedding\u6a21\u5757\u4ee3\u7801\u3002")),(0,i.kt)("p",null,"\u867d\u7136\u539f\u59cb\u8bba\u6587\u4e2d\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"position encoding"),"\u6a21\u5757\u4f7f\u7528\u4e86\u5bf9\u5e94\u6b63\u5f26\u4f59\u5f26\u516c\u5f0f\u6765\u8ba1\u7b97\u5176\u4f4d\u7f6e\u4fe1\u606f\uff0c\u53ef\u662f\u5728BERT\u5f53\u4e2d\u4f7f\u7528\u53ef\u5b66\u4e60\u7684Embedding\u6765\u4f5c\u4e3aposition embedding\uff0c\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u53c2\u6570\u4e5f\u662f\u4ece\u6743\u91cd\u6587\u4ef6\u4e2d\u52a0\u8f7d\u800c\u6765\uff0c\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"title=BertEmbedding showLineNumbers {9-11,15-17,19}",title:"BertEmbedding",showLineNumbers:!0,"{9-11,15-17,19}":!0},'class BertEmbeddings(Layer):\n"""\nInclude embeddings from word, position and token_type embeddings\n"""\n\ndef __init__(self, vocab_size, hidden_size=768, hidden_dropout_prob=0.1, max_position_embeddings=512, type_vocab_size=16):\n    super(BertEmbeddings, self).__init__()\n    # \u5b9a\u4e49Embedding\u6a21\u5757\n    self.word_embeddings = nn.Embedding(vocab_size, hidden_size)\n    self.position_embeddings = nn.Embedding(max_position_embeddings, hidden_size)\n    self.token_type_embeddings = nn.Embedding(type_vocab_size, hidden_size)\n\ndef forward(self, input_ids, token_type_ids=None, position_ids=None, past_key_values_length=None):\n    # \u8ba1\u7b97 word-embedding\u3001position-embedding\u4ee5\u53catoken-type-embedding\n    input_embedings = self.word_embeddings(input_ids)\n    position_embeddings = self.position_embeddings(position_ids)\n    token_type_embeddings = self.token_type_embeddings(token_type_ids)\n\n    embeddings = input_embedings + position_embeddings + token_type_embeddings\n    return embeddings\n')))}b.isMDXComponent=!0}}]);